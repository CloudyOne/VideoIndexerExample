@model IEnumerable<VideoIndexerExample.Models.IndexerVideo>

@{
    ViewData["Title"] = "Video Indexer Home";
}

<h2>Video Indexer Home</h2>


<table class="table">
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.AccountId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.Partition)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.ExternalId)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.Metadata)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.CreateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastModifiedTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastIndexingStartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Organization)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.PrivacyMode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsOwned)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsBase)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProcessingProgress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DurationInSeconds)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.ThumbnailUrl)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IndexingPreset)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StreamingPreset)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.SourceLanguage)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    <tr class="@(item.State=="Failed" ? " trFailed":"")">
        <td colspan="2">
            @Html.ActionLink("Edit Video", "Edit", new { id = item.Id }) <br />
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccountId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Partition)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.ExternalId)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Metadata)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.CreateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastModifiedTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastIndexingStartTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Organization)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.PrivacyMode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsOwned)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsBase)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.State)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProcessingProgress)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DurationInSeconds)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.ThumbnailUrl)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IndexingPreset)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StreamingPreset)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.SourceLanguage)
        </td>
    </tr>
}
    </tbody>
</table>

<style>
    .trFailed {
        background-color: lightcoral;
    }
</style>